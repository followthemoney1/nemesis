def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.sportu"
        minSdkVersion 18
        targetSdkVersion 30
        versionCode 7
        versionName '1.6'
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    signingConfigs {
        debug{

        }
        release {
            keyAlias 'newskey'
            keyPassword = 'newskey'
            storeFile = file('/Users/dmitrydyachenko/Desktop/git/sport_news/android/support/newskey.jks')
            storePassword = 'newskey'
        }
    }
    buildTypes {
        debug{
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled true
//            checkReleaseBuilds false
//            abortOnError false
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    ///implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.adjust.sdk:adjust-android:4.22.0'
//    implementation 'com.android.installreferrer:installreferrer:2.1'
    implementation "androidx.preference:preference:1.1.1"
    implementation 'androidx.multidex:multidex:2.0.0'

    //facebook
    implementation 'com.facebook.android:facebook-android-sdk:5.15.3'
    //    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
//    implementation 'com.google.firebase:firebase-analytics:17.4.4'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //branch
    implementation 'io.branch.sdk.android:library:5.+'
    implementation 'androidx.multidex:multidex:2.0.0'
    //messaging
    //implementation 'com.google.firebase:firebase-messaging-directboot:20.2.0'
    //implementation 'com.google.firebase:firebase-core:17.5.1'
    // Import the BoM for the Firebase platform
//    implementation platform('com.google.firebase:firebase-bom:25.12.0')
//    implementation 'com.google.firebase:firebase-messaging-directboot:20.2.0'
    implementation 'com.google.firebase:firebase-analytics:17.6.0'
    implementation 'com.google.firebase:firebase-messaging:20.3.0'
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

}
apply plugin: 'com.google.gms.google-services'

